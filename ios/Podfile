require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, min_ios_version_supported
prepare_react_native_project!

target 'appv3js' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => true,
    :fabric_enabled => true,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  pod 'BigInt', '>= 5.0'
  pod 'CryptoSwift', '~> 1.5'

  target 'appv3jsTests' do
    inherit! :complete
  end

  post_install do |installer|
    require 'xcodeproj'

    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Force C++17
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
        
        # Enable header maps and user paths
        config.build_settings['USE_HEADERMAP'] = 'YES'
        config.build_settings['ALWAYS_SEARCH_USER_PATHS'] = 'YES'
        
        # Comprehensive header search paths
        header_search_paths = [
          '$(inherited)',
          '$(SDKROOT)/usr/include',
          '$(TOOLCHAIN_DIR)/usr/include',
          '$(TOOLCHAIN_DIR)/usr/lib/clang/$(CLANG_VERSION)/include',
          # Add paths for generated files
          '${PODS_CONFIGURATION_BUILD_DIR}/ReactCommon/ReactCommon.framework/Headers',
          '${PODS_CONFIGURATION_BUILD_DIR}/React-RCTFabric/React_RCTFabric.framework/Headers',
          '${PODS_CONFIGURATION_BUILD_DIR}/React-Codegen/React_Codegen.framework/Headers',
          '${PODS_CONFIGURATION_BUILD_DIR}/RCT-Folly/folly.framework/Headers',
          # Ensure Folly can find its config
          '${PODS_ROOT}/RCT-Folly',
          '${PODS_ROOT}/Headers/Private/React-Core'
        ]
        
        config.build_settings['HEADER_SEARCH_PATHS'] ||= header_search_paths.join(' ')
        config.build_settings['SYSTEM_HEADER_SEARCH_PATHS'] = header_search_paths.join(' ')

        # Add ReactCommon root for JSI headers (without target.name check)
        if target.to_s.include?('RCT-Folly')
          config.build_settings['HEADER_SEARCH_PATHS'] += ' ${PODS_TARGET_SRCROOT}'
        end
        
        if target.to_s =~ /React-Core|ReactCommon|React-jsi/
          config.build_settings['HEADER_SEARCH_PATHS'] += ' ${PODS_ROOT}/../../node_modules/react-native/ReactCommon'
        end

        # JSI-specific header paths
        if target.to_s == 'jsi'
          jsi_header_paths = [
            '$(SDKROOT)/usr/include/**',
            '$(TOOLCHAIN_DIR)/usr/include/**',
            '$(TOOLCHAIN_DIR)/usr/lib/clang/$(CLANG_VERSION)/include/**'
          ]
          config.build_settings['HEADER_SEARCH_PATHS'] += ' ' + jsi_header_paths.join(' ')
        end
        
        # Folly-specific configuration
        if target.to_s == 'RCT-Folly'
          # Ensure folly-config.h generation
          config.build_settings['HEADER_SEARCH_PATHS'] ||= '$(inherited)'
          config.build_settings['HEADER_SEARCH_PATHS'] += ' ${PODS_ROOT}/RCT-Folly ${PODS_TARGET_SRCROOT} ${PODS_ROOT}/boost'
          
          # Force correct include order
          config.build_settings['OTHER_CFLAGS'] = '$(inherited) -DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -DRNVERSION=72'
          
          # Ensure Folly can find its dependencies
          config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FOLLY_HAVE_CLOCK_GETTIME=1'
        end
        
        # Hermes needs access to Folly
        if target.to_s.include?('hermes')
          config.build_settings['HEADER_SEARCH_PATHS'] ||= '$(inherited)'
          config.build_settings['HEADER_SEARCH_PATHS'] += ' ${PODS_ROOT}/RCT-Folly ${PODS_ROOT}/boost'
        end

        # Maintain Swift/React integration
        config.build_settings['SWIFT_INCLUDE_PATHS'] ||= ['$(inherited)']
        config.build_settings['SWIFT_INCLUDE_PATHS'] << '${PODS_CONFIGURATION_BUILD_DIR}/React-Core'
      end
    end

    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end